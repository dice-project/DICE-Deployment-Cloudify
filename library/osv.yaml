# OSv
# ===
#
# Currently, only OpenStack supports uploading OSv images. All platforms
# can create new OSv applications from images that are already uploaded (for
# example, from AMIs on AWS).


node_types:

  dice.components.osv.Application:
    # Why is osv.Application derived from image instead of server? Main reason
    # for doing this is to bypass Cloudify agent installation that is done by
    # default on types that derive from Compute node. Other reason is the fact
    # that we cannot remove attributes of parent type when deriving new type.
    derived_from: dice.images.Base
    properties:
      instance_type:
        description: Instance type that should be used.
        required: true
      user_data:
        description: User data (cloud init) to use when booting
        default: ""
      use_existing:
        description: >
          Set this to true if OSv image is already present on platform and use
          ID of the image in the image property.
        required: false
        default: false
      monitoring:
        type: dice.types.MonitoringConfig
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: dice.dice_plugin.tasks.osv.create
          executor: central_deployment_agent
          inputs:
            image:         { default: { get_property: [ SELF, image         ] } }
            instance_type: { default: { get_property: [ SELF, instance_type ] } }
            user_data:     { default: { get_property: [ SELF, user_data     ] } }
        start:
          implementation: dice.dice_plugin.general.start_server
          executor: central_deployment_agent
        stop:
          implementation: dice.dice_plugin.general.stop_server
          executor: central_deployment_agent
        delete:
          implementation: dice.dice_plugin.tasks.osv.delete
          executor: central_deployment_agent

  dice.components.osv.Application.Small:
    derived_from: dice.components.osv.Application
    properties:
      instance_type: { default: { get_input: small_instance_type } }

  dice.components.osv.Application.Medium:
    derived_from: dice.components.osv.Application
    properties:
      instance_type: { default: { get_input: medium_instance_type } }

  dice.components.osv.Application.Large:
    derived_from: dice.components.osv.Application
    properties:
      instance_type: { default: { get_input: large_instance_type } }
